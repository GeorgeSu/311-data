{"version":3,"sources":["Util/DataService.js","components/TreeMapVis/Legend.js","components/TreeMapVis/HoverInfo.js","components/common/CONSTANTS.js","components/common/dataPicker.jsx","components/TreeMapVis/TreeMapVis.js","components/CandleStick/CandleStick.js","components/PinMap/PinMap.jsx","components/HeatMap/HeatMap.js","components/LoadingSpinner/LoadingSpinner.js","App.js","serviceWorker.js","index.js"],"names":["dataResources","2019","2018","2017","2016","2015","getColorMap","discrete","title","color","Dead Animal Removal","Other","Homeless Encampment","Single Streetlight Issue","Electronic Waste","Feedback","Graffiti Removal","Multiple Streetlight Issue","Metal/Household Appliances","Illegal Dumping Pickup","Bulky Items","Report Water Waste","Legend","colorData","react_default","a","createElement","className","es","items","orientation","HoverInfo","_ref","dataTitle","dataCount","CONSTANTS","YEARS","MONTHS","REQUESTS","dataPicker","showMarkerDropdown","showRequestsDropdown","serviceRequests","showMarkers","onChange","toggleShowMarkers","constants","options","year","startMonth","endMonth","request","renderDatePicker","Object","keys","map","option","component","name","key","value","month","idx","service","Fragment","id","defaultValue","type","checked","TreeMapVis","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","setState","width","window","innerWidth","height","innerHeight","getBaseTree","loadingChanged","arguments","length","undefined","onBroadDataReady","treemap_data","children","start","Math","min","end","max","DataFrame","fromJSON","concat","then","df","show","totalCounts","groupBy","aggregate","group","stat","sum","rename","biggestProblems","toCollection","forEach","row","rhs","parseInt","callvolume","lhs","ncname","requesttype","colorMap","biggestProblem","data_point","size","push","getBroadCallVolume","state","dataset","handleNCZoom","x","ncName","onZoomedDataReady","getZoomedCallVolume","zoomed","handleNodeClick","selectedNC","hoveredItem","callVolume","data","handleNodeHover","onDatePickerChange","e","console","log","target","defineProperty","animation","damping","stiffness","colorType","onLeafClick","onLeafMouseOver","TreeMapVis_HoverInfo","TreeMapVis_Legend","React","Component","CandleStick","src","process","alt","PinMap","fetchData","highlightRegion","layer","setStyle","weight","dashArray","fillOpacity","bringToFront","resetRegionHighlight","fillColor","opacity","zoomToRegion","bounds","getBounds","onEachFeature","feature","popupText","properties","service_re","bindPopup","on","mouseover","mouseout","click","buildDataUrl","_this$state","dataUrl","axios","get","catch","error","renderOverlay","geoJSON","choropleth_default","style","ref","el","choropleth","leafletElement","renderMarkers","_this$state2","d","location","position","latitude","longitude","Marker","Popup","address","Rectangle","Tooltip","direction","offset","permanent","renderMap","_this$state3","zoom","mapUrl","Map","center","TileLayer","url","attribution","ncOverlay","HeatMap","LoadingSpinner","App","handleMockSelected","selectedId","handleLoadingChanged","loadingState","loading","_this2","prototypeMap","components_TreeMapVis_TreeMapVis","components_CandleStick_CandleStick","components_PinMap_PinMap","components_HeatMap_HeatMap","proto","onClick","components_LoadingSpinner_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecfb6f77.chunk.js","sourcesContent":["import DataFrame from 'dataframe-js';\n\nconst dataResources = {\n  2019:\"pvft-t768\",\n  2018:\"h65r-yf5i\",\n  2017:\"d4vt-q4t5\",\n  2016:\"ndkd-k878\",\n  2015:\"ms7h-a45h\"\n}\n\nexport function getDataResources() {\n  return dataResources;\n}\n\nexport function getColorMap(discrete){\n  if(discrete){\n    return [\n            {title: \"Dead Animal Removal\", color:\"#3b69a6\"},\n            {title: \"Other\",color:\"#0dd311\"},\n            {title: \"Homeless Encampment\",color:\"#c1614e\"},\n            {title: \"Single Streetlight Issue\",color:\"#304bb5\"},\n            {title: \"Electronic Waste\",color:\"#41a84b\"},\n            {title: \"Feedback\",color:\"#c2f961\"},\n            {title: \"Graffiti Removal\",color:\"#4d6173\"},\n            {title: \"Multiple Streetlight Issue\",color:\"#9f2826\"},\n            {title: \"Metal/Household Appliances\",color:\"#306088\"},\n            {title: \"Illegal Dumping Pickup\",color:\"#b6d4df\"},\n            {title: \"Bulky Items\",color:\"#7f2a10\"},\n            {title: \"Report Water Waste\",color:\"#f7a6ce\"}\n        ];\n  } else {\n    return {\n            \"Dead Animal Removal\":\"#3b69a6\",\n            \"Other\":\"#0dd311\",\n            \"Homeless Encampment\":\"#c1614e\",\n            \"Single Streetlight Issue\":\"#304bb5\",\n            \"Electronic Waste\":\"#41a84b\",\n            \"Feedback\":\"#c2f961\",\n            \"Graffiti Removal\":\"#4d6173\",\n            \"Multiple Streetlight Issue\":\"#9f2826\",\n            \"Metal/Household Appliances\":\"#306088\",\n            \"Illegal Dumping Pickup\":\"#b6d4df\",\n            \"Bulky Items\":\"#7f2a10\",\n            \"Report Water Waste\":\"#f7a6ce\"\n        };\n  }\n}\n\nexport function getBroadCallVolume(year, startMonth=0, endMonth=13, onBroadDataReady){\n  let treemap_data = {\"title\": \"Broad 311 Calls Map\", \"color\": \"#FFFFFF\", \"children\": []};\n  const start = Math.min(startMonth, endMonth)\n  const end = Math.max(startMonth, endMonth)\n\n  DataFrame.fromJSON(`https://data.lacity.org/resource/${dataResources[year]}.json?$select=count(*)+AS+CallVolume,NCName,RequestType&$where=date_extract_m(CreatedDate)+between+${start}+and+${end}&$group=NCName,RequestType&$order=CallVolume DESC`)\n    .then(df => {\n    df.show();\n\n    const totalCounts = df.groupBy(\"ncname\").aggregate(group => group.stat.sum(\"callvolume\")).rename(\"aggregation\", \"callvolume\");\n    let biggestProblems = {};\n    df.toCollection().forEach(row => {\n      const rhs = parseInt(row.callvolume);\n      const lhs = parseInt(biggestProblems[row.ncname]);\n      if(!lhs){\n        biggestProblems[row.ncname] = rhs;\n        biggestProblems[`${row.ncname}_biggestproblem`] = row.requesttype;\n      }\n      else if (lhs < rhs){\n        biggestProblems[row.ncname] = rhs;\n        biggestProblems[`${row.ncname}_biggestproblem`] = row.requesttype;\n      }\n    });\n    const colorMap = getColorMap(false);\n    totalCounts.toCollection().forEach(row => {\n      const biggestProblem = biggestProblems[`${row.ncname}_biggestproblem`];\n      const data_point = {\"title\": row.ncname, \"color\": colorMap[biggestProblem] , \"size\": row.callvolume};\n      treemap_data[\"children\"].push(data_point);\n    })\n    onBroadDataReady(treemap_data);\n  });\n}\n\nexport function getZoomedCallVolume(ncName, year, startMonth=0, endMonth=13, onZoomedDataReady){\n  let treemap_data = {\"title\": \"Zoomed 311 Calls Map\", \"color\": \"#FFFFFF\", \"children\": []};\n  const start = Math.min(startMonth, endMonth)\n  const end = Math.max(startMonth, endMonth)\n\n  DataFrame.fromJSON(`https://data.lacity.org/resource/${dataResources[year]}.json?$select=count(*)+AS+CallVolume,NCName,RequestType&$where=NCName+=+'${ncName}'+and+date_extract_m(CreatedDate)+between+${start}+and+${end}&$group=NCName,RequestType&$order=CallVolume DESC`).then(df => {\n    const colorMap = getColorMap(false);\n    df.toCollection().forEach(row => {\n      const data_point = {\"title\": row.requesttype, \"color\": colorMap[row.requesttype] , \"size\": row.callvolume};\n      treemap_data[\"children\"].push(data_point);\n    })\n    onZoomedDataReady(treemap_data);\n  });\n}\n","import React from 'react';\nimport {DiscreteColorLegend} from 'react-vis';\nimport {getColorMap} from '../../Util/DataService.js';\nimport './Styles/Legend.scss'\n\n\nconst Legend = () => {\n  const colorData = getColorMap(true);\n\n  return (\n    <div className=\"Legend\">\n      <DiscreteColorLegend\n        items={colorData}\n        orientation=\"horizontal\" />\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport './Styles/HoverInfo.scss';\n\nconst HoverInfo = ({dataTitle, dataCount}) => {\n  return (\n    <div className=\"HoverInfo\">\n      Title: {dataTitle}\n      <br/>\n      Call Volume: {dataCount}\n    </div>\n  );\n}\n\nexport default HoverInfo;\n","export default {\n  YEARS: [\n    '2015',\n    '2016',\n    '2017',\n    '2018',\n    '2019',\n  ],\n  MONTHS: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  REQUESTS: [\n    'Bulky Items',\n    'Dead Animal Removal',\n    'Electronic Waste',\n    'Graffiti Removal',\n    'Homeless Encampment',\n    'Illegal Dumping Pickup',\n    'Metal/Household Appliances',\n    'Single Streetlight Issue',\n    'Multiple Streetlight Issue',\n    'Report Water Waste',\n    'Other',\n  ],\n};\n","import React from 'react';\nimport constants from '../common/CONSTANTS.js';\n\nexport default ({\n  showMarkerDropdown,\n  showRequestsDropdown,\n  serviceRequests,\n  showMarkers,\n  onChange,\n  toggleShowMarkers,\n}) => {\n  const { YEARS, MONTHS } = constants;\n  const options = {\n    year: 'Year',\n    startMonth: 'Start Month',\n    endMonth: 'End Month',\n  };\n\n  if (showRequestsDropdown) {\n    options.request = 'Service Requests';\n  }\n\n  const renderDatePicker = Object.keys(options).map(option => {\n    let component;\n    const name = options[option];\n\n    switch (name) {\n      case 'Year':\n        component = YEARS.map(year => (<option key={year} value={year}>{year}</option>));\n        break;\n      case 'Start Month':\n        component = MONTHS.map((month, idx) => (<option key={month} value={idx + 1}>{month}</option>));\n        break;\n      case 'End Month':\n        component = MONTHS.map((month, idx) => (<option key={month} value={idx + 1}>{month}</option>));\n        break;\n      case 'Service Requests':\n        component = serviceRequests.map(service => (<option key={service} value={service}>{service}</option>));\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <React.Fragment key={option}>\n        {name}\n        &nbsp;\n        <select id={option} className=\"dropdown\" defaultValue={option === 'endMonth' ? '12' : null} onChange={onChange}>\n          {component}\n        </select>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <div className=\"dropdown-container\">\n      {renderDatePicker}\n      {showMarkerDropdown && (\n        <>\n          Show Markers\n          <input type=\"checkbox\" value=\"Markers\" checked={showMarkers} onChange={toggleShowMarkers}/>\n        </>\n      )}\n    </div>\n\n  );\n}\n","import React from 'react';\nimport {Treemap} from 'react-vis';\nimport Legend from './Legend.js';\nimport HoverInfo from './HoverInfo.js';\nimport Filters from './Filters.js';\nimport DateFilters from '../common/dataPicker.jsx';\nimport \"./Styles/TreeMapVis.scss\"\nimport {getZoomedCallVolume, getBroadCallVolume} from '../../Util/DataService.js';\n\nclass TreeMapVis extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {year: 2016,\n                  startMonth:1,\n                  endMonth:2,\n                  width:\"0\",\n                  height:\"0\",\n                  dataset: {},\n                  zoomed: false,\n                  selectedNC:\"\",\n                  hoveredItem: '',\n                  callVolume:''}\n  }\n\n\n  componentWillMount = () => {\n    this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.getBaseTree();\n  }\n\n  getBaseTree = () => {\n    this.props.loadingChanged(true);\n    getBroadCallVolume(this.state.year,\n                       this.state.startMonth,\n                       this.state.endMonth,\n                       (dataset) => {\n                         this.props.loadingChanged(false);\n                          this.setState({\n                            dataset: dataset\n                          });\n                        });\n  };\n\n  handleNCZoom = x => {\n    this.props.loadingChanged(true);\n    getZoomedCallVolume(x,\n                       this.state.year,\n                       this.state.startMonth,\n                       this.state.endMonth,\n                       (dataset) =>{\n                         this.props.loadingChanged(false);\n                          this.setState({\n                            dataset: dataset,\n                            zoomed: true\n                          });\n                        });\n  };\n\n  handleNodeClick = x => {\n      if (this.state.zoomed){\n        this.setState({\n          zoomed: false,\n          selectedNC:'',\n          hoveredItem: '',\n          callVolume: '' });\n        this.getBaseTree()\n      } else {\n        this.handleNCZoom(x.data.title);\n        this.setState({\n          selectedNC: x.data.title,\n          hoveredItem: '',\n          callVolume: '' });\n      }\n  };\n\n  handleNodeHover = x => {\n    this.setState({hoveredItem: x.data.title, callVolume: x.data.size});\n  };\n\n  onDatePickerChange = e => {\n    console.log(e.target.value);\n    console.log(e.target);\n    this.setState({[e.target.id]: e.target.value});\n    switch(e.target.id){\n      case \"startMonth\":\n\n        break\n      case \"endMonth\":\n        this.setState({endMonth: e.target.value});\n        break\n      case \"year\":\n        this.setState({year: e.target.value});\n        break\n      default:\n        break\n    }\n    if (this.state.zoomed){\n      this.handleNCZoom(this.state.selectedNC)\n    } else{\n      this.getBaseTree()\n    }\n  }\n\n  render() {\n    const animationProps = {\n      damping: 9,\n      stiffness: 300\n    }\n\n    return (\n      <div className=\"TreeMapVis\">\n        <Treemap\n          title={'My New Treemap'}\n          animation={animationProps}\n          colorType={'literal'}\n          width={this.state.width}\n          height={this.state.height / 2}\n          onLeafClick={this.handleNodeClick}\n          onLeafMouseOver={ this.handleNodeHover }\n          data={this.state.dataset}/>\n        <HoverInfo\n          dataTitle={this.state.hoveredItem}\n          dataCount={this.state.callVolume}/>\n        <Legend />\n        <DateFilters\n          onChange={this.onDatePickerChange}/>\n      </div>\n    );\n  }\n}\n\nexport default TreeMapVis;\n","import React from 'react';\n\nconst CandleStick = () => {\n  return (\n    <div>\n      <img src={process.env.PUBLIC_URL + '/candlestick.png'} alt=\"candlestick\"/>\n    </div>\n  );\n}\n\nexport default CandleStick;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Map, Marker, Popup, TileLayer, Rectangle, Tooltip } from 'react-leaflet';\nimport Choropleth from 'react-leaflet-choropleth';\n\nimport constants from '../common/CONSTANTS.js';\nimport { getDataResources } from '../../Util/DataService.js';\nimport DatePicker from '../common/dataPicker.jsx';\n\nimport neighborhoodOverlay from '../../data/la-county-neighborhoods-v6.json';\nimport municipalOverlay from '../../data/la-county-municipal-regions-current.json';\nimport councilDistrictsOverlay from '../../data/la-city-council-districts-2012.json';\nimport ncOverlay from '../../data/nc-boundary-2019.json'\n\n\nclass PinMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      year: '2015',\n      startMonth: '1',\n      endMonth: '12',\n      request: constants.REQUESTS[0],\n      position: [34.0173157, -118.2497254],\n      zoom: 10,\n      mapUrl: `https://api.tiles.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`,\n      dataUrl: 'https://data.lacity.org/resource/h65r-yf5i.json?$select=location,zipcode,address,requesttype,status,ncname,streetname,housenumber&$where=date_extract_m(CreatedDate)+between+2+and+3',\n      geoJSON: ncOverlay,\n      showMarkers: false,\n      bounds: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  onDatePickerChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    }, () => {\n      this.fetchData();\n    });\n  }\n\n  toggleShowMarkers = () => {\n    const { showMarkers } = this.state;\n    this.setState({ showMarkers: !showMarkers })\n  }\n\n  highlightRegion = e => {\n    const layer = e.target;\n\n    layer.setStyle({\n      weight: 5,\n      color: '#666',\n      dashArray: '',\n      fillOpacity: 0.7\n    });\n\n    layer.bringToFront();\n  }\n\n  resetRegionHighlight = e => {\n    const layer = e.target;\n\n    layer.setStyle({\n      fillColor: '#bcbddc',\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '3',\n      fillOpacity: 0.7\n    })\n  }\n\n  zoomToRegion = e => {\n    const bounds = e.target.getBounds();\n    this.setState({ bounds })\n  }\n\n  onEachFeature = (feature, layer) => {\n    // Popup text when clicking on a region\n    const popupText = `\n      <div class=\"overlay_feature_popup\">\n        ${feature.properties.name}\n        <br />\n        ${feature.properties.service_re}\n      </div>\n    `;\n    layer.bindPopup(popupText)\n\n    // Sets mouseover/out/click event handlers for each region\n    layer.on({\n      mouseover: this.highlightRegion,\n      mouseout: this.resetRegionHighlight,\n      click: this.zoomToRegion,\n    });\n  }\n\n  buildDataUrl = () => {\n    const { startMonth, endMonth, year, request } = this.state;\n    const dataResources = getDataResources();\n    return `https://data.lacity.org/resource/${dataResources[year]}.json?$select=location,zipcode,address,requesttype,status,ncname,streetname,housenumber&$where=date_extract_m(CreatedDate)+between+${startMonth}+and+${endMonth}+and+requesttype='${request}'`\n  }\n\n  fetchData = () => {\n    const dataUrl = this.buildDataUrl();\n\n    axios.get(dataUrl)\n      .then(({ data }) => {\n        this.setState({ data })\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  renderOverlay = () => {\n    const { geoJSON } = this.state;\n\n    if (geoJSON) {\n      return (\n        <Choropleth\n          data={geoJSON}\n          style={{\n            fillColor: '#bcbddc',\n            weight: 2,\n            opacity: 1,\n            color: 'white',\n            dashArray: '3',\n            fillOpacity: 0.7\n          }}\n          onEachFeature={this.onEachFeature}\n          ref={(el) => el ? this.choropleth = el.leafletElement : null}\n        />\n      )\n    }\n  }\n\n  renderMarkers = () => {\n    const { data, showMarkers } = this.state;\n\n    if (showMarkers && data && data.length > 0) {\n      return data.map((d, idx) => {\n        const { location } = d;\n        let position = [0, 0];\n\n        if (location) {\n          position = [location.latitude, location.longitude];\n        }\n\n        return (\n          <Marker key={idx} position={position}>\n            <Popup>\n              Type:\n              {d.requesttype}\n              <br />\n              Address:\n              {d.address}\n            </Popup>\n          </Marker>\n        );\n      });\n    }\n\n    const tooltipPosition = [[34.0173157, -118.2497254], [34.1, -118.1497254],]\n\n    return (\n      <Rectangle bounds={tooltipPosition} color=\"black\">\n        <Tooltip direction=\"top\" offset={[0, 20]} opacity={1} permanent>\n          No Data To Display\n        </Tooltip>\n      </Rectangle>\n    )\n  }\n\n  renderMap = () => {\n    const {\n      position,\n      zoom,\n      mapUrl,\n      showMarkers,\n      bounds,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"map-container\">\n          <Map\n            center={position}\n            zoom={zoom}\n            bounds={bounds}\n            style={{ height: '70vh' }}>\n            <TileLayer\n              url={mapUrl}\n              attribution=\"MapBox\"\n            />\n            {this.renderOverlay()}\n            {this.renderMarkers()}\n          </Map>\n        </div>\n        <DatePicker\n          showMarkerDropdown\n          showRequestsDropdown\n          serviceRequests={constants.REQUESTS}\n          showMarkers={showMarkers}\n          toggleShowMarkers={this.toggleShowMarkers}\n          onChange={this.onDatePickerChange}\n        />\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"pinmap\">{this.renderMap()}</div>\n    )\n  }\n}\n\nexport default PinMap;\n","import React from 'react';\n\nconst HeatMap = () => {\n  return (\n    <div>\n      <img src={process.env.PUBLIC_URL + '/heatmap.png'} alt=\"heatmap\"/>\n    </div>\n  );\n}\n\nexport default HeatMap;\n","import './Styles/LoadingSpinner.scss';\nimport React from 'react';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"LoadingSpinner\" />\n  );\n}\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport './App.css';\nimport TreeMapVis from './components/TreeMapVis/TreeMapVis.js';\nimport CandleStick from './components/CandleStick/CandleStick.js';\nimport PinMap from './components/PinMap/PinMap.jsx';\nimport HeatMap from './components/HeatMap/HeatMap.js';\nimport LoadingSpinner from './components/LoadingSpinner/LoadingSpinner.js';\n\n\n class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state = {\n       selectedId: \"TreeMapVis\",\n       loading:false\n     }\n   }\n\n   handleMockSelected = (e) => {\n    this.setState({selectedId: e.target.value});\n   }\n\n   handleLoadingChanged = (loadingState) => {\n     this.setState({loading:loadingState});\n   }\n\n  render(){\n    const prototypeMap = {\n      TreeMapVis: <TreeMapVis loadingChanged={this.handleLoadingChanged}/>,\n      CandleStick: <CandleStick/>,\n      PinMap: <PinMap loadingChanged={this.handleLoadingChanged} />,\n      HeatMap:<HeatMap/>\n    }\n\n    return (\n      <div className=\"App\" >\n        {Object.keys(prototypeMap).map( proto =>\n          <div key={proto}>\n            <input type=\"radio\" name=\"prototypes\" value={proto} onClick={this.handleMockSelected}/>{proto}<br/>\n          </div>\n        )}\n        { prototypeMap[this.state.selectedId] }\n        { this.state.loading &&\n          <LoadingSpinner/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}